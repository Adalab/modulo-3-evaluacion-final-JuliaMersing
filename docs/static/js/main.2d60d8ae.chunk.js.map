{"version":3,"sources":["services/Api.js","components/Character.js","components/CharactersList.js","components/Notfound.js","components/CharacterDetail.js","Image/Rick_and_Morty.png","services/local-storage.js","components/FilterByName.js","components/FilterBySpecie.js","components/Filters.js","components/App.js","index.js"],"names":["getApiData","fetch","then","response","json","data","map","character","name","photo","image","specie","species","id","planet","origin","episode","status","Character","props","className","to","src","alt","CharactersList","characterElements","characters","Notfound","CharacterDetail","class","length","objToExport","get","key","defaultData","localStorage","getItem","JSON","parse","set","value","setItem","stringify","FilterByName","htmlFor","type","placeholder","filterName","onChange","ev","console","log","handleFilter","target","FilterBySpecie","inputsearch","filterSpecie","Filters","App","useState","ls","setCharacters","setFilterName","setFilterSpecie","useEffect","charactersData","filteredCharacters","filter","toLowerCase","includes","Logo","exact","path","filterSpecies","render","routeCharacterId","match","params","characterId","foundCharacter","find","parseInt","undefined","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2d60d8ae.chunk.js","sourcesContent":["const getApiData = () => {\r\n  return fetch(\r\n    \"https://rickandmortyapi.com/api/character/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\"\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const cleanData = data.map((character) => {\r\n        return {\r\n          name: character.name,\r\n          photo: character.image,\r\n          specie: character.species,\r\n          id: character.id,\r\n          planet: character.origin.name,\r\n          episode: character.episode,\r\n          status: character.status,\r\n        };\r\n      });\r\n      return cleanData;\r\n    });\r\n};\r\n\r\nexport default getApiData;\r\n","import React from \"react\";\r\nimport \"../stylesheet/Character.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Character = (props) => {\r\n  return (\r\n    <article className=\"characterCard\">\r\n      <Link to={`/character/${props.character.id}`}>\r\n        <img\r\n          className=\"imageCharacter\"\r\n          src={props.character.photo}\r\n          alt={props.character.name}\r\n        />\r\n      </Link>\r\n      <h4>{props.character.name}</h4>\r\n      <p>{props.character.specie}</p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import React from \"react\";\r\nimport Character from \"./Character\";\r\nimport \"../stylesheet/List.css\";\r\n\r\nconst CharactersList = (props) => {\r\n  const characterElements = props.characters.map((character) => {\r\n    return <Character key={character.id} character={character} />;\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <ul className=\"cards\">{characterElements}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharactersList;\r\n","import React from \"react\";\r\nimport \"../stylesheet/Notfound.css\";\r\n\r\nconst Notfound = () => {\r\n  return (\r\n    <div className=\"notfound\">\r\n      <p>You may have made a typing error. This character does not exist </p>\r\n      <img\r\n        className=\"notfoundImg\"\r\n        src=\"https://media2.giphy.com/media/3o7TKuAfCHifvPdcxG/200.gif?cid=6104955ee217f4e7cd4aa21708ff12d11c326ef5d3f38193&rid=200.gif&ct=g&cid=6104955ee217f4e7cd4aa21708ff12d11c326ef5d3f38193&rid=200.gif&ct=g\"\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notfound;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheet/CharacterDetails.css\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const renderStatus = () => {\r\n    if (props.character.status === \"Dead\") {\r\n      return <i class=\"fas fa-dizzy\"></i>;\r\n    } else if (props.character.status === \"unknown\") {\r\n      return <i class=\"far fa-question-circle\"></i>;\r\n    } else if (props.character.status === \"Alive\") {\r\n      return \"Alive\";\r\n    }\r\n  };\r\n\r\n  const renderSpecies = () => {\r\n    if (props.character.specie === \"Human\") {\r\n      return <i class=\"far fa-user\"></i>;\r\n    } else if (props.character.specie === \"Humanoid\") {\r\n      return <i class=\"fab fa-reddit-alien\"></i>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <article className=\"singleCharacterCard\">\r\n        <img\r\n          className=\"imageCharacter\"\r\n          src={props.character.photo}\r\n          alt={props.character.name}\r\n        />\r\n        <div className=\"characterDetails\">\r\n          <h4>{props.character.name}</h4>\r\n          <ul>\r\n            <li>Specie: {renderSpecies()}</li>\r\n            <li>Planet: {props.character.planet}</li>\r\n            <li>Episodes: {props.character.episode.length}</li>\r\n            <li>Status: {renderStatus()}</li>\r\n          </ul>\r\n        </div>\r\n      </article>\r\n      <Link className=\"link\" to=\"/\">\r\n        Volver\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","export default __webpack_public_path__ + \"static/media/Rick_and_Morty.de13d484.png\";","const get = (key, defaultData) => {\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n    return defaultData;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst objToExport = {\r\n  get: get,\r\n  set: set,\r\n};\r\n\r\nexport default objToExport;\r\n","import React from \"react\";\r\n\r\nconst FilterByName = (props) => {\r\n  const handleChange = (ev) => {\r\n    console.log(ev);\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor=\"name\"> </label>\r\n      <input\r\n        className=\"inputsearch\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        placeholder=\"Filtra por nombre\"\r\n        value={props.filterName}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","import React from \"react\";\r\n\r\nconst FilterBySpecie = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"specie\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label inputsearch htmlFor=\"specie\"></label>\r\n      <input\r\n        className=\"inputsearch\"\r\n        type=\"text\"\r\n        name=\"specie\"\r\n        id=\"specie\"\r\n        placeholder=\"Filtra por especie\"\r\n        value={props.filterSpecie}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterBySpecie;\r\n","import React from \"react\";\r\nimport FilterByName from \"./FilterByName\";\r\nimport FilterBySpecie from \"./FilterBySpecie\";\r\n\r\nconst Filters = (props) => {\r\n  return (\r\n    <section>\r\n      <form className=\"filters\">\r\n        <FilterByName\r\n          filterName={props.filterName}\r\n          handleFilter={props.handleFilter}\r\n        />\r\n        <FilterBySpecie\r\n          filterSpecie={props.filterSpecie}\r\n          handleFilter={props.handleFilter}\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { useState, useEffect } from \"react\";\nimport getApiData from \"../services/Api\";\nimport CharactersList from \"./CharactersList\";\nimport Notfound from \"./Notfound\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Logo from \"../Image/Rick_and_Morty.png\";\nimport \"../stylesheet/App.css\";\nimport ls from \"../services/local-storage\";\nimport Filters from \"./Filters\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState(ls.get(\"characters\", []));\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\", \"\"));\n  const [filterSpecie, setFilterSpecie] = useState(ls.get(\"filterSpecie\", \"\"));\n\n  useEffect(() => {\n    if (characters.length === 0) {\n      getApiData().then((charactersData) => {\n        setCharacters(charactersData);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n    ls.set(\"filterName\", filterName);\n    ls.set(\"filterSpecie\", filterSpecie);\n  }, [characters, filterName, filterSpecie]);\n\n  const handleFilter = (data) => {\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    } else if (data.key === \"specie\") {\n      setFilterSpecie(data.value);\n    }\n  };\n\n  const filteredCharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(filterName.toLowerCase());\n    })\n    .filter((character) => {\n      if (filterSpecie === \"\") {\n        return true;\n      } else {\n        return character.specie\n          .toLowerCase()\n          .includes(filterSpecie.toLowerCase());\n      }\n    });\n\n  const renderCharacterDetails = (props) => {\n    const routeCharacterId = props.match.params.characterId;\n\n    const foundCharacter = characters.find((character) => {\n      return character.id === parseInt(routeCharacterId);\n    });\n    if (foundCharacter !== undefined) {\n      return <CharacterDetail character={foundCharacter} />;\n    }\n  };\n\n  console.log(filteredCharacters.length);\n  return (\n    <div className=\"page\">\n      <img className=\"logo\" src={Logo} alt=\"Logo\" />\n      <Switch>\n        <Route exact path=\"/\">\n          <div>\n            <Filters\n              filterName={filterName}\n              filterSpecies={filterSpecie}\n              handleFilter={handleFilter}\n            />\n            <ul>\n              {filteredCharacters.length > 0 ? (\n                <CharactersList characters={filteredCharacters} />\n              ) : (\n                <Notfound />\n              )}\n            </ul>\n          </div>\n        </Route>\n        <div className=\"SingleCharacter\">\n          <Route\n            path=\"/character/:characterId\"\n            render={renderCharacterDetails}\n          />\n        </div>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheet/index.css\";\nimport App from \"./components/App.js\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}